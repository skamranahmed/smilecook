version: "3.9"

services:
  smilecook-api:
    image: smilecook-api # for local
    # image: 034317561586.dkr.ecr.ap-south-1.amazonaws.com/smilecook:staging
    environment: # local credentials
      - MONGO_URI=mongodb://admin:password@mongodb:27017/test?authSource=admin&readPreference=primary&ssl=false
      - MONGO_DATABASE=demo
      - REDIS_URI=redis:6379
      - API_VERSION=1.0.0
    logging:
      driver: gelf # gelf will be used to stream our application logs to logstash
      options:
        gelf-address: "udp://127.0.0.1:12201" # TODO: research on why is this UDP?
        tag: "smilecook-api"
    networks:
      - smilecook_network
    external_links:
      - mongodb
      - redis
    depends_on:
      - redis
    scale: 5
  
  redis:
    image: redis
    networks:
      - smilecook_network
  
  mongodb:
    image: mongo:4.4.3
    networks:
      - smilecook_network
    environment: # local credentials
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password

  prometheus:
    image: prom/prometheus:v2.27.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 4040:9090
    networks:
      - smilecook_network

  grafana:
    image: grafana/grafana:7.5.6
    ports:
      - 3030:3000
    networks:
      - smilecook_network

  telegraf:
    image: telegraf:latest
    volumes:
      - $PWD/telegraf.conf:/etc/telegraf/telegraf.conf
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - smilecook_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.1
    command: logstash -f /etc/logstash/logstash.conf
    volumes:
      - $PWD/logstash.conf:/etc/logstash/logstash.conf
    ports:
      - "5000:5000"
      - "12201:12201"
      - "12201:12201/udp"
    networks:
      - smilecook_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node # for production env we should use multiple nodes but for now single node is fine
    networks:
      - smilecook_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - smilecook_network

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - $PWD/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - smilecook-api
    networks:
      - smilecook_network

networks:
  smilecook_network:
    external: true # the network should be created externally before running docker-compose up, TODO: change this behaviour to create the network upon running docker-compose up
